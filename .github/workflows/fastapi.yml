name: Deploy to Amazon Lambda

on:
  push:
    branches: [ "dev" ]

env:
  AWS_REGION: ${{ vars.AWS_REGION }}                        
  ECR_REPOSITORY: fastapi-deploy      # i will delet so i am not keeping it in env var
  LAMBDA_FUNCTION_NAME: fastapi-deploy-lambda
permissions:
  contents: read

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: lambda
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        echo "ECR_Registry:=$ECR_REGISTRY"
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

    - name: Log the pushed image
      id: Output
      run: |
        echo "The pushed image is: ${{ env.IMAGE_URI }}"

    - name: Update AWS Lambda function with the new image
      run: |
        aws lambda update-function-code \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --image-uri ${{ env.IMAGE_URI }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}

    - name: Clean up untagged images
      run: |
        aws ecr list-images --repository-name $ECR_REPOSITORY --filter "tagStatus=UNTAGGED" --query "imageIds[*]" --output json > untagged_images.json
        if [ -s untagged_images.json ]; then
          aws ecr batch-delete-image --repository-name $ECR_REPOSITORY --image-ids file://untagged_images.json
        fi



